executing body-parser.executing body-parser.cloneBase:REPOSITORY_PATH is:: /vagrant/docker/deployProject:deployBaseCommand.stdout::Sending build context to Docker daemon 2.048 kBdeployProject:deployBaseCommand.stdout::
deployProject:deployBaseCommand.stdout::Step 1 : FROM smebberson/alpine-nginx:3.0.0
deployProject:deployBaseCommand.stdout:: ---> 5473ded7a8f3
Successfully built 5473ded7a8f3
Closer of docker compose.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.cloneBase:REPOSITORY_PATH is:: /vagrant/docker/deployProject:deployBaseCommand.stdout::Sending build context to Docker daemon 2.048 kBdeployProject:deployBaseCommand.stdout::
deployProject:deployBaseCommand.stdout::Step 1 : FROM smebberson/alpine-nginx:3.0.0
deployProject:deployBaseCommand.stdout:: ---> 5473ded7a8f3
deployProject:deployBaseCommand.stdout::Successfully built 5473ded7a8f3
Closer of docker compose.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.cloneBase:REPOSITORY_PATH is:: /vagrant/docker/cloneBase:REPOSITORY_PATH is:: /vagrant/docker/executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.cloneBase:REPOSITORY_PATH is:: /vagrant/docker/deployProject:deployBaseCommand.stdout::Sending build context to Docker daemon 2.048 kBdeployProject:deployBaseCommand.stdout::
deployProject:deployBaseCommand.stdout::Step 1 : FROM smebberson/alpine-nginx:3.0.0
deployProject:deployBaseCommand.stdout:: ---> 5473ded7a8f3
deployProject:deployBaseCommand.stdout::Successfully built 5473ded7a8f3
Closer of docker compose.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.cloneBase:REPOSITORY_PATH is:: /vagrant/docker/executing body-parser.executing body-parser.cloneBase:REPOSITORY_PATH is:: /vagrant/docker/deployProject:deployBaseCommand.stdout::Sending build context to Docker daemon 2.048 kBdeployProject:deployBaseCommand.stdout::
deployProject:deployBaseCommand.stdout::Step 1 : FROM smebberson/alpine-nginx:3.0.0
deployProject:deployBaseCommand.stdout:: ---> 5473ded7a8f3
deployProject:deployBaseCommand.stdout::Successfully built 5473ded7a8f3
executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.cloneBase:REPOSITORY_PATH is:: /vagrant/docker/executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.executing body-parser.cloneBase:REPOSITORY_PATH is:: /vagrant/docker/deployProject:deployBaseCommand.stdout::Sending build context to Docker daemon 2.048 kBdeployProject:deployBaseCommand.stdout::
deployProject:deployBaseCommand.stdout::Step 1 : FROM smebberson/alpine-nginx:3.0.0
deployProject:deployBaseCommand.stdout:: ---> 5473ded7a8f3
deployProject:deployBaseCommand.stdout::Successfully built 5473ded7a8f3
Closer of docker compose.deployProject:dockerComposeCommand.stderr::Creating network "reverseproxyconfig_default" with the default driver
deployProject:dockerComposeCommand.stderr::Building site2
deployProject:dockerComposeCommand.stdout::Step 1 : FROM mhart/alpine-node:6.3.0
deployProject:dockerComposeCommand.stdout:: ---> fffb49210fed
deployProject:dockerComposeCommand.stdout::Step 2 : RUN npm install -g http-server
deployProject:dockerComposeCommand.stdout:: ---> Using cache
deployProject:dockerComposeCommand.stdout:: ---> 152249e987f4
deployProject:dockerComposeCommand.stdout::Step 3 : COPY index.html .
deployProject:dockerComposeCommand.stdout:: ---> 23575874b8e1
deployProject:dockerComposeCommand.stdout:: ---> Using cache
deployProject:dockerComposeCommand.stdout::Step 4 : CMD http-server --port 8080
deployProject:dockerComposeCommand.stdout:: ---> Using cache
deployProject:dockerComposeCommand.stdout:: ---> 883250ee6737
deployProject:dockerComposeCommand.stdout::Successfully built 883250ee6737
deployProject:dockerComposeCommand.stderr::Building site1
deployProject:dockerComposeCommand.stdout::Step 1 : FROM mhart/alpine-node:6.3.0
deployProject:dockerComposeCommand.stdout:: ---> fffb49210fed
deployProject:dockerComposeCommand.stdout::Step 2 : RUN npm install -g http-server
deployProject:dockerComposeCommand.stdout:: ---> Using cache
deployProject:dockerComposeCommand.stdout:: ---> 152249e987f4
deployProject:dockerComposeCommand.stdout::Step 3 : COPY index.html .
deployProject:dockerComposeCommand.stdout:: ---> Using cache
deployProject:dockerComposeCommand.stdout:: ---> f8e781799c3d
deployProject:dockerComposeCommand.stdout::Step 4 : CMD http-server --port 8080
deployProject:dockerComposeCommand.stdout:: ---> Using cache
deployProject:dockerComposeCommand.stdout:: ---> daef4fc19833
deployProject:dockerComposeCommand.stdout::Successfully built daef4fc19833
deployProject:dockerComposeCommand.stderr::Building proxy
deployProject:dockerComposeCommand.stdout::Step 1 : FROM appfabric/reverseproxy
deployProject:dockerComposeCommand.stdout:: ---> 5473ded7a8f3
deployProject:dockerComposeCommand.stdout::Step 2 : ADD root /
deployProject:dockerComposeCommand.stdout:: ---> Using cache
deployProject:dockerComposeCommand.stdout:: ---> b11b41ad6789
deployProject:dockerComposeCommand.stdout::Successfully built b11b41ad6789
deployProject:dockerComposeCommand.stderr::Creating reverseproxyconfig_site2_1
deployProject:dockerComposeCommand.stderr::Creating reverseproxyconfig_site1_1
deployProject:dockerComposeCommand.stderr::Creating reverseproxyconfig_proxy_1
Closer of docker compose.